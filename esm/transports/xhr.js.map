{"version":3,"file":"xhr.js","sourceRoot":"","sources":["../../src/transports/xhr.ts"],"names":[],"mappings":";AAAA,OAAO,EAAmB,MAAM,EAAE,MAAM,eAAe,CAAC;AAExD,OAAO,EAAE,GAAG,EAAE,MAAM,kBAAkB,CAAC;AAEvC,OAAO,EAAE,aAAa,EAAE,MAAM,QAAQ,CAAC;AAEvC,4BAA4B;AAC5B;IAAkC,gCAAa;IAA/C;;IA6BA,CAAC;IA5BC;;OAEG;IACI,gCAAS,GAAhB,UAAiB,KAAY;QAA7B,iBAwBC;QAvBC,IAAM,OAAO,GAAG,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,WAAW,CAAC;QAE/C,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CACrB,IAAI,OAAO,CAAW,UAAC,OAAO,EAAE,MAAM;YACpC,0CAA0C;YAC1C,OAAO,CAAC;gBACN,GAAG,EAAE,KAAI,CAAC,GAAG;gBACb,MAAM,EAAE,MAAM;gBACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;gBAC3B,MAAM,EAAE;oBACN,cAAc,EAAE,kBAAkB;iBACnC;gBACD,OAAO,EAAP,UAAQ,GAA2B;oBACjC,OAAO,CAAC;wBACN,MAAM,EAAE,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC;qBAC5C,CAAC,CAAC;gBACL,CAAC;gBACD,IAAI,EAAJ,UAAK,KAAa;oBAChB,MAAM,CAAC,KAAK,CAAC,CAAC;gBAChB,CAAC;aACF,CAAC,CAAC;QACL,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IACH,mBAAC;AAAD,CAAC,AA7BD,CAAkC,aAAa,GA6B9C","sourcesContent":["import { Event, Response, Status } from \"@sentry/types\";\n\nimport { sdk } from \"../crossPlatform\";\n\nimport { BaseTransport } from \"./base\";\n\n/** `XHR` based transport */\nexport class XHRTransport extends BaseTransport {\n  /**\n   * @inheritDoc\n   */\n  public sendEvent(event: Event): PromiseLike<Response> {\n    const request = sdk.request || sdk.httpRequest;\n\n    return this._buffer.add(\n      new Promise<Response>((resolve, reject) => {\n        // tslint:disable-next-line: no-unsafe-any\n        request({\n          url: this.url,\n          method: \"POST\",\n          data: JSON.stringify(event),\n          header: {\n            \"content-type\": \"application/json\"\n          },\n          success(res: { statusCode: number }): void {\n            resolve({\n              status: Status.fromHttpCode(res.statusCode)\n            });\n          },\n          fail(error: object): void {\n            reject(error);\n          }\n        });\n      })\n    );\n  }\n}\n"]}